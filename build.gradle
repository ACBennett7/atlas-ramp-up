plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.diffplug.spotless" version "6.8.0"
}

group = 'com.bettercloud'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
            srcDirs('integrationTest') // use function to append instead of overwrite srcdirs
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    integrationTestImplementation.extendsFrom(implementation)
    integrationTestImplementation.extendsFrom(testImplementation)
    integrationTestRuntimeOnly.extendsFrom(runtimeOnly)
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.projectlombok:lombok'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.9.0'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // IntegrationTest deps
    integrationTestAnnotationProcessor 'org.projectlombok:lombok'
    integrationTestImplementation('io.cucumber:cucumber-java:7.+')
    integrationTestImplementation('io.cucumber:cucumber-junit:7.+')
    integrationTestImplementation('io.cucumber:cucumber-spring:7.+')
    integrationTestImplementation('com.github.tomakehurst:wiremock-jre8:2.+')
    integrationTestImplementation('org.awaitility:awaitility:4.2.0')
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('integrationTest', Test) {
    description = "Runs integration tests"
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest
